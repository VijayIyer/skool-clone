import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import TestButton from "@/components/button";
import axios from "axios";
import { useEffect, useState } from "react";
import { Stack } from "@mui/material";

const inter = Inter({ subsets: ["latin"] });
interface Task {
  _id: string;
  content: string;
  linkes: number;
  title: string;
  userId: string;
  _v: number;
}

export default function Home() {
  const [task, setTask] = useState<Task[]>([]);
  const [findById, setFindById] = useState<Task>();
  const fetchTasks = () => {
    axios.get("api/get_post").then((res) => {
      setTask(res.data);
    });
  };
  useEffect(() => {
    fetchTasks();
  }, []);
  const handlePostOne = () => {
    axios
      .post(`/api/set_post`, {
        // userId: userId,
        title: "POST ONE MORE",
        content: "TEST POST ONE MORE",
      })
      .then((res) => {
        fetchTasks();
      })
      .catch((err) => console.log(err));
  };
  const handelDeleteLastOne = () => {
    console.log(task[task.length - 1]);
    axios
      .delete("/api/delete_post", { data: { id: task[task.length - 1]._id } })
      .then((res) => {
        console.log("id", task[task.length - 1]._id);
        fetchTasks();
      });
  };
  const handleUpdate = () => {
    const changeConter = task[task.length - 1];

    changeConter.title = "test update";
    changeConter.content = "test the update last one";
    console.log(changeConter);
    axios
      .put("/api/update_post", {
        id: changeConter._id,
        updateData: changeConter,
      })
      .then((res) => {
        fetchTasks();
      });
  };
  const handleGetLastOne = () => {
    const changeConter = task[task.length - 1];

    axios
      .delete("/api/get_post_byId", { data: { id: task[task.length - 1]._id } })
      .then((res) => {
        console.log(res);
        setFindById(res.data[0]);
      });
  };
  console.log(findById?.title);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        {/* <TestButton size="large" disabled={false}>
          Test Button
        </TestButton> */}
        {task.map((each) => {
          return (
            <Stack key={each._id} id={each._id}>
              <Stack key={each._id} flexDirection={"column"}>
                <Stack> {each.title}</Stack>
                {each.content}
              </Stack>
            </Stack>
          );
        })}
        <button onClick={handlePostOne}>post one</button>
        <button onClick={handelDeleteLastOne}>delete last one</button>
        <button onClick={handleUpdate}>update the last one to new post</button>
        <button onClick={handleGetLastOne}>get last one </button>
        {findById !== undefined && (
          <Stack>
            <Stack>{findById.title}</Stack>
            <Stack>{findById.content}</Stack>
          </Stack>
        )}
      </main>
    </>
  );
}
